---
import { getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";

const companies = await getCollection("companies");
const caseStudies = await getCollection("caseStudies");
const caseStudiesByCompany = Object.groupBy(
  caseStudies,
  (item) => item.data.company
);
const dateFormatter = new Intl.DateTimeFormat("en-US", {
  year: "numeric",
  month: "long",
});
---

<BaseLayout>
  <h1>üíº Frontend Case Studies</h1>
  <p>
    Articles like ‚ÄúBuilding a simple todo list with [framework or technology
    name]‚Äù won‚Äôt teach you how that framework or technology solves real-world
    problems and works at a large scale. This document is a curated list of
    technical talks and articles about real-world enterprise frontend
    development.
  </p>

  <div class="companies">
    {
      companies
        .sort((a, b) => a.data.name.localeCompare(b.data.name))
        .map((company) => (
          <section>
            <h2>
              <a href={company.data.websiteUrl}>{company.data.name}</a>
            </h2>
            <ul>
              {caseStudiesByCompany[company.id]
                ?.sort(
                  (a, b) =>
                    b.data.publishedAt.getTime() - a.data.publishedAt.getTime()
                )
                .map((caseStudy) => (
                  <li>
                    <a href={caseStudy.id}>{caseStudy.data.title}</a>
                    <time datetime={caseStudy.data.publishedAt.toISOString()}>
                      {dateFormatter.format(caseStudy.data.publishedAt)}
                    </time>
                  </li>
                ))}
            </ul>
          </section>
        ))
    }
  </div>
</BaseLayout>

<style>
  h1 {
    font-size: 3.5rem;
  }

  .companies {
    margin-top: 2rem;
  }

  h2 {
    font-size: 2.5rem;
  }

  ul,
  li {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  li {
    margin-block: 1rem;
  }

  time {
    color: #59636e;
  }

  @media (min-width: 60rem) {
    .companies {
      display: grid;
      grid-template-columns: minmax(40px, max-content) 1fr;
      gap: 1rem;
    }

    section,
    ul {
      display: contents;
    }

    h2 {
      grid-column: 2 / -1;
    }

    li {
      display: grid;
      grid-template-columns: subgrid;
      grid-column: 1 / -1;
      margin: 0;
    }

    li > a {
      grid-column: 2;
    }

    time {
      text-align: right;
      grid-column: 1 / 1;
      grid-row: 1 / 1;
    }
  }
</style>
